<?php

/**
 * Created by PhpStorm.
 * User: Gowtham
 * Date: 12/10/2015
 * Time: 2:45 PM
 */
class Search extends CI_Controller
{
    public function __construct()
    {
        parent::__construct(); // TODO: Change the autogenerated stub
        $this->load->model('property_model','pro');
        $this->load->model('Property_type_model','type');
    }


    function index(){

        $con = array();

        if($this->input->get('key') != 'any' ){
            $con['like'] =  array('`key`' => $this->input->get('key') )  ;
        }

        if( $this->input->get('status') && $this->input->get('status') != 'any' && $this->input->get('status') != '' ){
            $s['`for`'] = $this->input->get('status') ;
        }
        if( $this->input->get('type') && $this->input->get('type') != 'any' && $this->input->get('type') != ''  ){
            $s['property_type'] =   $this->input->get('type')  ;
        }



        if( $this->input->get('min-price') && $this->input->get('min-price') != 'any' && $this->input->get('min-price') != ''  ){
            $s['price >='] =   $this->input->get('min-price')  ;
        }
        if( $this->input->get('max-price') && $this->input->get('max-price') != 'any' && $this->input->get('max-price') != ''  ){
            $s['price <='] =   $this->input->get('max-price')  ;
        }

        if(isset($s)){
            $con['where'] = $s ;
        }



        $limit = array( LIMIT ,  LIMIT * ( ($this->input->get('page_id')? $this->input->get('page_id') : 1)  - 1 ) )  ;

        $d['product'] = $this->pro->getBy(array('status'=>1 ) , $limit , null ,     $con  );
        $d['count'] = $this->pro->getBy(array('status'=>1 ) , 'count' , null ,     $con  );
        $d['type'] = $this->type->getRecords();
        $d['pro_type'] = (object) array('title' => 'Search Result') ;
        $location = $this->pro->getBy(array('status'=>1 ) , false , '`key`' ,array('group_by'=>'key') );

        foreach($location as $l ){
            $s = explode(',',$l->key);
            if(count($s) == 1 )
                $k[] = trim($s[0]) ;
            else {
                foreach($s  as $v ){
                    $k[] = trim($v)  ;
                }
            }
        }
        $k =  array_unique($k);
        sort($k);
        $d['key'] = $k ;
        unset($k);
        unset($location);

        $this->load->view('property_type',$d);

    }

}